{
	"info": {
		"_postman_id": "c633bd87-2ee5-44e9-980f-08781413dd05",
		"name": "Evulution",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authnz",
			"item": [
				{
					"name": "Register Invalid cases ",
					"item": [
						{
							"name": "empty name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty name, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"male\",\n  \"email\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty birthdate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty birthdate, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"male\",\n  \"email\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "birthdate invalid format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given wrongly formatted birthdate, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"122-06-12\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"male\",\n  \"email\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty password, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"\",\n  \"sex\": \"male\",\n  \"email\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty sex",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty sex, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"\",\n  \"email\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty email, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"male\",\n  \"email\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "email invalid format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given wrongly formatted email, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"male\",\n  \"email\": \"emailemail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given wrongly formatted email, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "birthdate in the future",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given birthdate in the future, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"3222-06-12\",\n  \"password\": \"Strong Password\",\n  \"sex\": \"male\",\n  \"email\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						}
					],
					"description": "(we want the valid case for login)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "register account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given valid request, status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"{{user_password}}\",\n  \"sex\": \"male\",\n  \"email\": \"{{user_email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "register same account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given customer already exists, status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Cena\",\n  \"birthdate\": \"1222-06-12\",\n  \"password\": \"{{user_password}}\",\n  \"sex\": \"male\",\n  \"email\": \"{{user_email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/customers",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "account does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty birthdate, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"random@email.com\",\n  \"password\": \"random password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/login",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "bad password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given empty birthdate, status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {{user_email}},\n  \"password\": \"random password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/login",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "sucessful login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Given valid request, status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Given valid request, response has token\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.token).to.be.a('string');",
											"});",
											"",
											"",
											"",
											"const res = pm.response.json()",
											"",
											"pm.environment.set(\"token\", res.token);",
											"",
											"",
											"console.log(pm.environment.get(\"token\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/login",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Transaction",
			"item": [
				{
					"name": "new transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request, status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Given valid request, response has token\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.transaction_id).to.be.a('string');",
									"});",
									"",
									"const res = pm.response.json()",
									"",
									"pm.environment.set(\"transaction_id\", res.transaction_id);",
									"pm.environment.set(\"delivery_id\", res.delivery_id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request, status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vanry\",\n  \"color\": \"white\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/vehicle",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"vehicle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add vehicle bad input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given invalid request body, status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/vehicle",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"vehicle"
							]
						}
					},
					"response": []
				},
				{
					"name": "add battery valid type ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request , status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Given valid request, response has estimated_range\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.estimated_range).to.be.a('number');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"SHORT_RANGE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/battery",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"battery"
							]
						}
					},
					"response": []
				},
				{
					"name": "add battery invalid type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given invalid request body, status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": {\n        \"a\": 2\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/battery",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"battery"
							]
						}
					},
					"response": []
				},
				{
					"name": "bank payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request , status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bank_no\": 200,\n  \"account_no\": 1999999,\n  \"frequency\": \"monthly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/complete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "bank payment invalid account no",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request , status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bank_no\": \"20s\",\n  \"account_no\": 1999999,\n  \"frequency\": \"monthly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/complete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "bank payment invalid frequency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request , status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bank_no\": \"20s\",\n  \"account_no\": 1999999,\n  \"frequency\": \"daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/complete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "bank payment invalid bank no",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request , status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bank_no\": \"20s\",\n  \"account_no\": 1999999,\n  \"frequency\": \"monthly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/sales/{{transaction_id}}/complete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sales",
								"{{transaction_id}}",
								"complete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delivery",
			"item": [
				{
					"name": "Add valid delivery location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given valid request, status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mode\": \"At campus\",\n  \"location\": \"Vachon\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/deliveries/{{delivery_id}}/location",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deliveries",
								"{{delivery_id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add delivery invalid mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given invalid mode, status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mode\": \"Not at campus\",\n  \"location\": \"Vachon\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/deliveries/{{delivery_id}}/location",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deliveries",
								"{{delivery_id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add delivery invalid location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Given invalid location, then code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mode\": \"At campus\",\n  \"location\": \"Pyramide ste foy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/deliveries/{{delivery_id}}/location",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deliveries",
								"{{delivery_id}}",
								"location"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "user_password",
			"value": "Strong Password"
		},
		{
			"key": "user_email",
			"value": "email@email.com"
		}
	]
}