<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ca.ulaval.glo4003</groupId>
    <artifactId>Evulution</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Evulution</name>

    <properties>
        <appName>ev-ul-tion</appName>
        <java.version>13</java.version>
        <junit.version>5.7.2</junit.version>
        <mockito.version>2.28.2</mockito.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jetty.version>11.0.6</jetty.version>
        <jackson.version>2.12.2</jackson.version>
        <jersey.version>3.0.2</jersey.version>
        <log4j.version>2.14.1</log4j.version>
        <jacoco.version>0.8.7</jacoco.version>
        <google.truth.version>1.1.3</google.truth.version>
        <jakarta.version>5.0.0</jakarta.version>
        <jakarta-ws-rs.version>3.0.0</jakarta-ws-rs.version>
        <jakarta-validation.version>3.0.0</jakarta-validation.version>
        <jakarta-el.version>4.0.2</jakarta-el.version>
        <jax-b.version>3.0.2</jax-b.version>
        <hibernate.version>7.0.1.Final</hibernate.version>
        <rest-assured.version>4.4.0</rest-assured.version>
        <guava.version>30.1.1-jre</guava.version>
        <bean-validation.version>2.31</bean-validation.version>
        <jakarta-annotation>2.0.0</jakarta-annotation>
        <jackson-databind>2.12.2</jackson-databind>
        <jakarta-mail.version>1.6.4</jakarta-mail.version>
        <jackarta-activation-api.version>2.0.1</jackarta-activation-api.version>

        <!-- Plugins -->
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <spotbugs-maven-plugin.version>4.2.3</spotbugs-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
        <jacoco.coverage.ratio.minimum>0.80</jacoco.coverage.ratio.minimum>
        <jacoco.method.miss.maximum>0</jacoco.method.miss.maximum>
        <fmt-maven-plugin.version>2.12</fmt-maven-plugin.version>
        <heroku-maven-plugin.version>3.0.3</heroku-maven-plugin.version>
        <jakarta-annotation>2.0.0</jakarta-annotation>
    </properties>

    <dependencies>
        <!-- Internal libraries -->
        <dependency>
            <groupId>ca.ulaval.glo4003.evulution</groupId>
            <artifactId>car-manufacture</artifactId>
            <version>1.0.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/car-manufacture-1.0.0.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-jetty-http</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>${jakarta-ws-rs.version}</version>
        </dependency>

        <!-- Validation -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-cdi</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>${jakarta-el.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta-validation.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${jakarta-annotation}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind}</version>
        </dependency>

        <!-- Jersey DI and core-->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-api</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- add jackson to support json -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Runtime dependencies -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Jetty 11 needs Servlet 5 -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>${jakarta.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jax-b.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!--  Email server dependencies  -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>${jakarta-mail.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <version>${jackarta-activation-api.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>
            <version>${google.truth.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>jersey-jetty</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <source>13</source>
                    <target>13</target>
                </configuration>
            </plugin>

            <!-- JUnit 5 need at least 2.22.0 to support -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>ca.ulaval.glo4003.EvulutionMain</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- copy project dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>false</failOnWarning>
                            <ignoredUnusedDeclaredDependencies>
                                org.apache.logging.log4j:log4j-api,org.apache.logging.log4j:log4j-core,org.apache.logging.log4j:log4j-slf4j-impl,org.junit.jupiter:junit-jupiter,org.apache.logging.log4j:log4j-jul,com.sun.xml.bind:jaxb-impl,org.junit.jupiter:junit-jupiter-engine,org.hibernate.validator:hibernate-validator,io.rest-assured:json-path,io.rest-assured:rest-assured,jakarta.servlet:jakarta.servlet-api,org.glassfish.jersey.inject:jersey-hk2,org.glassfish:jakarta.el,org.hibernate.validator:hibernate-validator-cdi,org.glassfish.jersey.media:jersey-media-json-jackson,jakarta.activation:jakarta.activation-api,ca.ulaval.glo4003.evulution:car-manufacture:jar:1.0.0
                            </ignoredUnusedDeclaredDependencies>
                            <ignoredUsedUndeclaredDependencies>
                                org.junit.jupiter:junit-jupiter-api,org.eclipse.jetty:jetty-server
                            </ignoredUsedUndeclaredDependencies>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- exclude junit, we need runtime dependency only -->
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <phase>verify</phase>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.coverage.ratio.minimum}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>${jacoco.method.miss.maximum}</maximum>
                                        </limit>
                                    </limits>
                                    <excludes>
                                        <exclude>ca.ulaval.glo4003.EvulutionMain</exclude>
                                        <exclude>ca.ulaval.glo4003.EvulutionMain.1</exclude>
                                        <exclude>ca.ulaval.glo4003.EvulutionMain.2</exclude>
                                        <exclude>ca.ulaval.glo4003.EvulutionMain.3</exclude>
                                        <exclude>ca.ulaval.glo4003.EvulutionMain.4</exclude>
                                        <exclude>ca.ulaval.glo4003.ws.http.CorsResponseFilter
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.context.*</exclude>
                                        <exclude>ca.ulaval.glo4003.ws.domain.auth.Session</exclude>

                                        <!-- API -->
                                        <exclude>ca.ulaval.glo4003.ws.api.shared.ExceptionResponse
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.api.user.exception.InvalidFormatException
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.api.delivery.dto.response.SetDeliveryLocationResponse
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.api.mock.MockResourceImpl
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.api.filter.allowed.*</exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.api.transaction.dto.VehicleRequest
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.api.shared.exception.InvalidRequestException
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.api.transaction.dto.BatteryRequest
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.api.shared.RequestValidator
                                        </exclude>

                                        <!-- DOMAIN -->
                                        <exclude>ca.ulaval.glo4003.ws.domain.delivery.DeliveryId
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.domain.transaction.TransactionId
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.domain.transaction.Transaction
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.domain.delivery.DeliveryDestination
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.domain.delivery.exception.InvalidLocationException
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.domain.transaction.exception.CannotAddBatteryBeforeVehicleException:
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.domain.vehicle.Color</exclude>
                                        <exclude>ca.ulaval.glo4003.ws.domain.vehicle.Model</exclude>

                                        <!-- INFRA -->
                                        <exclude>
                                            ca.ulaval.glo4003.ws.infrastructure.delivery.InMemoryDeliveryDto
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.infrastructure.exception.UserNotFoundException
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.infrastructure.model.ModelDto
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.infrastructure.exception.UserNotFoundException
                                        </exclude>
                                        <exclude>ca.ulaval.glo4003.ws.infrastructure.model.ModelDto
                                        </exclude>
                                        <exclude>
                                            ca.ulaval.glo4003.ws.infrastructure.notification.email.jakarta.TransportWrapper
                                        </exclude>

                                        <exclude>ca.ulaval.glo4003.EvulutionMain</exclude>

                                        <!-- EXTERNAL API -->
                                        <exclude>ca.ulaval.glo4003.evulution.car_manufacture.*
                                        </exclude>

                                        <!-- TODO to be tested-->
                                        <exclude>ca.ulaval.glo4003.ws.domain.assembly.strategy.AssemblyStrategyFactory</exclude>
                                        <exclude>ca.ulaval.glo4003.ws.domain.assembly.strategy.linear.LinearAssemblyStrategy</exclude>
                                    </excludes>
                                </rule>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
                <version>${heroku-maven-plugin.version}</version>
                <configuration>
                    <appName>${appName}</appName>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
